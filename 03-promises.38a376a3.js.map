{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAChCC,EAAgB,EAChBC,EAAU,KACVC,EAAc,CAChBC,SAAU,GACVC,MAAO,IAqBN,IAAGC,EAAgB,SAACC,EAAeC,GAlBtC,IAAuBJ,EAAUC,EACzBI,GADeL,EAmBPG,EAnBiBF,EAmBFK,OAAOF,GAlB9BC,EAAgBE,KAAKC,SAAW,GAE/B,IAAIC,SAAQ,SAACC,EAASC,GAC3BZ,EAAc,CACZC,SAAUA,EACVC,MAAOA,GAELI,EAEFK,EAAQX,GAGRY,EAAOZ,E,KAORa,MAAK,SAAAC,G,IAAGb,EAAQa,EAARb,SAAUC,EAAKY,EAALZ,MACjBa,EAAAtB,GAASuB,OAAOC,QAAQ,uBAAwCC,OAAfjB,EAAS,QAAYiB,OAANhB,EAAM,M,IAEvEiB,OAAM,SAAAL,G,IAAGb,EAAQa,EAARb,SAAUC,EAAKY,EAALZ,MAClBa,EAAAtB,GAASuB,OAAOI,QAAQ,sBAAuCF,OAAfjB,EAAS,QAAYiB,OAANhB,EAAM,M,KAwC3EP,EAAK0B,iBAAiB,UApCA,SAAAC,GACpBC,QAAQC,IAAI,oBACZF,EAAMG,iBAEJ,IAAEC,EAAI,EACRC,EAEIhC,EADFiC,SAAY1B,EAAKyB,EAALzB,MAAO2B,EAAIF,EAAJE,KAAMC,EAAMH,EAANG,OAEvBzB,EAAWE,OAAOL,EAAM6B,OAE5BC,YAAW,WAEP7B,EAAYL,EAAeO,GAG7BA,GAAYE,OAAOsB,EAAKE,OACxBL,IAGA5B,IAGEC,EAAQkC,aAAY,WAElB9B,EAAYL,EAAeO,GAE7BqB,IACA5B,IAEI4B,IAAMnB,OAAOuB,EAAOC,QACtBG,cAAcnC,GAEhBM,GAAYE,OAAOsB,EAAKE,M,GACvBxB,OAAOsB,EAAKE,O,GACdxB,OAAOL,EAAM6B,O","sources":["src/js/03-promises.js"],"sourcesContent":["'use strict';\nimport Notiflix from 'notiflix';\nconst form = document.querySelector('.form');\nlet promiseNumber = 1;\nlet timerId = null;\nlet dataPromise = {\n  position: '',\n  delay: '',\n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    dataPromise = {\n      position: position,\n      delay: delay,\n    };\n    if (shouldResolve) {\n      // Fulfill\n      resolve(dataPromise);\n    } else {\n      // Reject\n      reject(dataPromise);\n    }\n  });\n}\n//funkcja do wyświetlania komunikatu permise. funkcja przyjmuje numer permise oraz delay po jakim została wywołana\nconst promiseResult = (promiseNumber, delayVal) => {\n  createPromise(promiseNumber, Number(delayVal))\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n};\n\nconst submitPromise = event => {\n  console.log('aktywacja submit');\n  event.preventDefault();\n  //zmienna kontrolująca numer pętli\n  let n = 0;\n  const {\n    elements: { delay, step, amount },\n  } = form;\n  let delayVal = Number(delay.value);\n\n  setTimeout(() => {\n    //wywołanie fukcji to wyświetlania komunikatu o permise\n    promiseResult(promiseNumber, delayVal);\n\n    //licznik do komunikatu permise: delay\n    delayVal += Number(step.value);\n    n++;\n\n    //licznik do komunikatu permise: position\n    promiseNumber++;\n\n    //interwal wykonujący się tyle razy ile amount\n    timerId = setInterval(() => {\n      //wywołanie fukcji to wyświetlania komunikatu o permise\n      promiseResult(promiseNumber, delayVal);\n\n      n++;\n      promiseNumber++;\n      //zatrzymywanie pętli gdy osiągnie amount number\n      if (n === Number(amount.value)) {\n        clearInterval(timerId);\n      }\n      delayVal += Number(step.value);\n    }, Number(step.value));\n  }, Number(delay.value));\n};\nform.addEventListener('submit', submitPromise);\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$promiseNumber","$ce04d3a99e08e73b$var$timerId","$ce04d3a99e08e73b$var$dataPromise","position","delay","$ce04d3a99e08e73b$var$promiseResult","promiseNumber1","delayVal","shouldResolve","Number","Math","random","Promise","resolve","reject","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","addEventListener","event","console","log","preventDefault","n","_elements","elements","step","amount","value","setTimeout","setInterval","clearInterval"],"version":3,"file":"03-promises.38a376a3.js.map"}